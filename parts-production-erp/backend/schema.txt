project - evalution
wireframe - blueprint of project
login - userID , password , loginButton 

manufactoring unit 
makes small parts
4 fernises
1 2 3 4
in each fernise there are two people, 1 person in shift1(morning), 1 person in shift 2(evening)

we produce item from fernise
final product - post machine
final product goes in storage
storage has racks
there are 20 racks

piston 
dimension - 25x25x25
weight - 35
quantity - 25
material - material type

PO - purchase order ***POST API
gives detail of how many piston should i create

PO gets by customer (customerID as objectID)

PO also has status - pending , inproduction , completed

for trasnsportation - vehicle number , driver

partial order // optional

completed order 

delievery has PO's
when delievry has done credits has been given


customer name - PO's data - totalAmount - ispaymentREceived


payment also includes GST


userRoles =  [ salesPerson , manifacturingPerson , storePerson, Accountant, Admin(manager)]

E-Waybill number

if steel is less than 25k then reorder - work of storePerson
the reorder limit can change by storeperson

orders - 
50kg - silver
50 kg - gold
storeperson keeps this information and update data in raw material inventory

all order crossed the limit of 500000 then has to be approved by admin


reports
how much sales happen in months
all reports
on avg sale,on avg profit,
payments to employee

raw material ,EwayBill ,Report(optional)

purchaseOrder {
    _id
    customerID : autogenerated
    customerName
    products:[ Object id ref product]
    Quantity // -> get this by length of products array
    OrderStatus  -> default pending / manufactred / stored / delivered(compelted)
    isApprove -> default false (update by manifactured)
    Totalprice
    paymentStatus : default false
    storageLocation
    vehicle: object_id of vehicle
    deliveryDate - when order deliever
}

// vehicle
// quantity - 
// customer - create Schema

customer {
    _id
    name
    phoneNumber
}

products{
    _id
    productName
    UnitPrice (dimension x 10)
    rawMaterial=[],
    weight
    dimensions: 1x1x1 (default)
    defaultDimensionPrice : 10
}

user{
    _id
    userID: autogenerated
    userRole : 
    email :nodemailer
    username :
    password : autogenerated
    isDeleted :false
}





----------
if salesperson login then 
2. create product
1 . place order
1. approve the PO's and change order status 
2. can change price of products

if manifactured login then
1. isApprove updated to true
1. update isManifactured to true

if storeperson
1. update storage location
2 . update vehicle schema

if accountant
1. calculate total price with GST and update in PO's
2. update payment status to true if payment is done

if admin(manager)
1. create multiple role users
2. allot vehicle to PO's
3. update status to complete



// give object id as reference in PO for perticular role (done)

// create furnise (done)
// create storage space (done)
// create driver (create userRole as driver)
// create driver update API

// calculate per product price asccording to dimension  ****done 
// calculate final price in  PO   (pending)





************flow************
1. check if admin /manager if no create Admin.

2. login through admin
     * Create USER ROLES*

    - salesperson  (in user)

    - manifacturer (in user)
        * while creating manifacturer add manifacturer shift as morning or evening &
        * add furnace id as reference

    - storePerson  (in user)

    - accountant   (in user)

    - driver       (in user)

    - create customer (in customer) (customer is not a user role different page)

    - Create furnace  (in furnase)

    - Create storage  (in storage)

    - create product (in product)

3. login through salesPerson  
    - give PO order by giving productID as reference and 
        customerID as reference ( in PO)
    - update salesPerson id in PO as reference 
 
4. Login through Admin
    - update isApprove to true ( in PO )

5. login through manifacturer 
    - update order status to manufactured ( in PO)
    - update manifacturer ID in PO as reference 

6. login through storePerson  
    - update the storageLocation add refernce of storageSpace ( in PO)
    - update order status to stored ( in PO)
    - update storePerson ID in PO as reference 

7. login through driver 
    - update order status to delivered
    - update isDelievrr to true
    - update driver ID in po as referece

8. login through accountant  
    - update total price with GST (in PO)
    - update payment status to true ( in PO)
    - update Accountant ID in PO as referece 

9. login through manager/admin  
    - update OrderStatus to completed (in PO)


// credit period  - future Scope

// create customer 
{
    "name":"",
    phoneNumber:""
}

// create Furnace 
{
    "name":""
}

// create storage
{
    "name":""
}

// create User - salesPerson / manifacturer / storePerson / accountant / driver
{ 
    "userName":"",
    "userRole":"",
    "email":"",

    //if userRole is manifacturer
    "shift":[
        {
            "time":"",
            "furnaceID":""
        }
    ]
}

// creating Product
{
    "productName":"Steel Bar",
    "dimensions":"5x5x5",
    "material":"steel",
    "defaultDimensionsPrice":"10"
}

// create PO
{
    "customerID":"",
    "products":[
        {
            "product":"",
            "quantity":""
        }
    ]
}


things pending
1.populate assignedManifacturer -> shift ->  furnace id

